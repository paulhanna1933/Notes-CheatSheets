=====INSTALL==========INSTALL==========INSTALL==========INSTALL==========INSTALL

sudo apt-get install -y mongodb-org

$ mkdir data
$ echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest "$@"' > mongod
$ chmod a+x mongod

=====COMMANDS=====COMMANDS=====COMMANDS=====COMMANDS=====COMMANDS=====COMMANDS

#Mongo Commands

* mongod
* mongo
* help
* show dbs
* use
* insert
* find
* update
* remove

=====DATABASE REPAIR=====DATABASE REPAIR=====DATABASE REPAIR=====DATABASE REPAIR

IF CRASHED
ctrl + c

if crash:

cd ~ 
./mongod â€”repair

______________

/data directory (inside /workspace) and cd into it. Once in run rm mongo.lock then cd back into and run ./mongod 

cd ~ /data
rm mongod.lock
cd
./mongod
______________

=====DATA ASSOCIATIONS=====DATA ASSOCIATIONS=====DATA ASSOCIATIONS=====DATA ASSOCIATIONS

User
Post
Photos
Albums
Comments
Tags
Likes
______________

Association Types: one:one | one:many | many:many
______________

#EMBEDDING DATA

var mongoose = require("mongoose");
mongoose.connect("mongodb://localhost/blog_demo");

//POST - title, content
var postSchema = new mongoose.Schema({
    title: String,
    content: String
});
var Post = mongoose.model("Post", postSchema);

//USER - email, name
var userSchema = new mongoose.Schema({
    email: String,
    name: String,
    posts: [postSchema]
});
var User = mongoose.model("User", userSchema);

var newUser = new User({
    email: "hermione@hogwarts.edu",
    name: "Hermione Granger"
});

newUser.posts.push({
    title: "How to bre polyjuice potion",
    content: "Just kidding. Go to potions class to learn it!"
});

newUser.save(function(err, user){
    if(err){
        console.log(err);
    } else {
        console.log(user);
    }
});

var newPost = new Post({
    title: "Reflections on Apples",
    content: "They are delicious"
});

newPost.save(function(err, post){
  if(err){
      console.log(err);
  } else {
      console.log(post);
  }
});


User.findOne({name: "Hermione Granger"}, function(err, user){
   if(err){
    //   console.log(err);
   } else {
       user.posts.push({
           title: "3 Things I really hate",
           content: "Voldemort. Voldemort. Voldemort"
       });
       user.save(function(err, user){
           if(err){
               console.log(err);
           } else {
               console.log(user);
           }
       });
   }
});

______________

#REFERENCING DATA

var mongoose = require("mongoose");
mongoose.connect("mongodb://localhost/blog_demo_2");

//POST - title, content
var postSchema = new mongoose.Schema({
    title: String,
    content: String
});
var Post = mongoose.model("Post", postSchema);

//USER - email, name
var userSchema = new mongoose.Schema({
    email: String,
    name: String,
    posts: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: "Post"
        }
    ]
});
var User = mongoose.model("User", userSchema);
// Post.create({
//   title: "How to cook the best burger pt. 3",
//   content: "giberish giberish giberish"
// }, function(err, post){
//     User.findOne({email: "bob@gmail.com"}, function(err, foundUser){
//       if(err){
//           console.log(err);
//       } else {
//           foundUser.posts.push(post);
//           foundUser.save(function(err, data){
//               if(err){
//                   console.log(err);
                   
//               } else {
//                   console.log(data);
//               }
//           });
//       }
//     });
// });

// Find user
// Find all posts for that user

User.findOne({email: "bob@gmail.com"}).populate("posts").exec(function(err, user){
    if(err){
        console.log(err);
    } else {
        console.log(user);
    }
});
